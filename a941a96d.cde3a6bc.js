(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{172:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return o}));var n=a(1),r=a(9),l=(a(0),a(196)),b={id:"broadcasts",title:"Broadcasts"},c={id:"modules/information/broadcasts",title:"Broadcasts",description:"The broadcast module allows you to broadcast a message to all players at any given point in the match.",source:"@site/docs/modules/information/broadcasts.mdx",permalink:"/docs/modules/information/broadcasts",editUrl:"https://github.com/Electroid/PGM/edit/docs/docs/modules/information/broadcasts.mdx",sidebar:"Modules",previous:{title:"Map Tutorial",permalink:"/docs/modules/information/tutorial"},next:{title:"Rules",permalink:"/docs/modules/information/rules"}},s=[],i={rightToc:s};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The broadcast module allows you to broadcast a message to all players at any given point in the match.\nInside the broadcast tag you may specify either a ",Object(l.b)("inlineCode",{parentName:"p"},"<alert>")," or a ",Object(l.b)("inlineCode",{parentName:"p"},"<tip>")," message tag with an ",Object(l.b)("inlineCode",{parentName:"p"},'after=""')," attribute. This attribute is required and specifies how long after the match is started the broadcast is shown. ",Object(l.b)("br",null),"\nThe text in broadcasts can be formatted by using ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/reference/formatting"}),"formatting codes"),"."),Object(l.b)("span",{className:"badge badge--warning"},"Note!")," This module should **only** be used to to show important information that is **specific** and **unique** to the map. It should not be used to for generic OCN related messages.",Object(l.b)("div",{className:"table-container"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",null,"Broadcasts Element"),Object(l.b)("th",null,"Description"),Object(l.b)("th",null,"Value/Children"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"<broadcasts> </broadcasts>")),Object(l.b)("td",null,"An element containing all the defined broadcast messages."),Object(l.b)("td",null)),Object(l.b)("tr",null,Object(l.b)("th",null,"Sub-Elements"),Object(l.b)("th",null),Object(l.b)("th",null)),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"<tip> </tip>")),Object(l.b)("td",null,"This will display a [Tip] message"),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--primary"},"Formatted Text"))),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"<alert> </alert>")),Object(l.b)("td",null,"This will display an [Alert] message"),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--primary"},"Formatted Text")))))),Object(l.b)("h5",{id:"message-tag-attributes"},"Message Tag Attributes"),Object(l.b)("div",{className:"table-container"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",null,"Attribute"),Object(l.b)("th",null,"Description"),Object(l.b)("th",null,"Value"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"after")),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--danger"},"Required"),"Duration to wait after the match starts to show the message."),Object(l.b)("td",null,Object(l.b)("a",{href:"/reference/time_periods"},"Time Period"))),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"every")),Object(l.b)("td",null,"After the message is shown repeat it with this duration between messages."),Object(l.b)("td",null,Object(l.b)("a",{href:"/reference/time_periods"},"Time Period"))),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"count")),Object(l.b)("td",null,"Amount of times the message is repeated.",Object(l.b)("br",null),Object(l.b)("i",null,"Infinite repetition can be specified by using ",Object(l.b)("label",null,"oo")," as the duration.")),Object(l.b)("td",null,Object(l.b)("span",{className:"label label-primary"},"Number"))),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"filter")),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--secondary",title:"Can be either this attribute or a sub-element."},"Property"),"Filter if the broadcast message is sent after the duration has passed, or if it's skipped."),Object(l.b)("td",null,Object(l.b)("a",{href:"/modules/filters"},"Filter")))))),Object(l.b)("h5",{id:"message-tag-sub-elements"},"Message Tag Sub-elements"),Object(l.b)("div",{className:"table-container"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",null,"Element"),Object(l.b)("th",null,"Description"),Object(l.b)("th",null,"Value"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"<filter>")),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--secondary",title:"Can be this sub-element or an attribute."},"Property"),"Filter if the broadcast message is sent after the duration has passed, or if it's skipped."),Object(l.b)("td",null,Object(l.b)("a",{href:"/modules/filters"},"Filters")))))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Examples")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),'<broadcasts>\n    <tip after="30s">A [Tip] displayed 30 seconds into the match</tip>\n    <alert after="5m">An [Alert] displayed after 5 minutes</alert>\n    <tip after="10m" count="3">Repeated [Tip] at 10m, 20m, and 30m</tip>\n    <tip after="99s" count="oo">Repeated every 99 seconds, forever</tip>\n    <tip after="20m" every="1m">Displayed at 20m and every minute after that</tip>\n    <tip after="30m" every="10m" count="3">At 30m, 40m, and 50m</tip>\n</broadcasts>\n')))}o.isMDXComponent=!0},196:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),o=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},u=function(e){var t=o(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,b=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=o(a),p=n,m=u["".concat(b,".").concat(p)]||u[p]||d[p]||l;return a?r.a.createElement(m,c({ref:t},i,{components:a})):r.a.createElement(m,c({ref:t},i))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,b=new Array(l);b[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var i=2;i<l;i++)b[i]=a[i];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);