(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{176:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return c})),l.d(t,"metadata",(function(){return r})),l.d(t,"rightToc",(function(){return u})),l.d(t,"default",(function(){return d}));var a=l(1),b=l(9),n=(l(0),l(180)),c={id:"damage",title:"Damage"},r={id:"modules/damage",title:"Damage",description:"### Friendly Fire",source:"@site/docs/modules/damage.mdx",permalink:"/PGM/docs/modules/damage",editUrl:"https://github.com/Electroid/PGM/edit/docs/docs/modules/damage.mdx",sidebar:"Modules",previous:{title:"Lanes",permalink:"/PGM/docs/modules/lanes"},next:{title:"Gamerules",permalink:"/PGM/docs/modules/gamerules"}},u=[{value:"Friendly Fire",id:"friendly-fire",children:[]},{value:"Difficulty",id:"difficulty",children:[]},{value:"Hunger",id:"hunger",children:[]},{value:"Damage Filtering",id:"damage-filtering",children:[]},{value:"Disable Damage",id:"disable-damage",children:[]}],i={rightToc:u};function d(e){var t=e.components,l=Object(b.a)(e,["components"]);return Object(n.b)("wrapper",Object(a.a)({},i,l,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h3",{id:"friendly-fire"},"Friendly Fire"),Object(n.b)("p",null,"Allows teammates to kill each other. Arrows will be absorbed if they hit a teammate."),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<friendlyfire>on</friendlyfire> \x3c!-- Defaults to off --\x3e\n")),Object(n.b)("p",null,"Refunds arrows blocked by teammates from non-infinity bows."),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<friendlyfirerefund>off</friendlyfirerefund> \x3c!-- Defaults to on --\x3e\n")),Object(n.b)("h3",{id:"difficulty"},"Difficulty"),Object(n.b)("p",null,"The difficulty level can be set to ",Object(n.b)("inlineCode",{parentName:"p"},"peaceful"),", ",Object(n.b)("inlineCode",{parentName:"p"},"easy"),", ",Object(n.b)("inlineCode",{parentName:"p"},"normal"),", or ",Object(n.b)("inlineCode",{parentName:"p"},"hard"),". The default is ",Object(n.b)("inlineCode",{parentName:"p"},"hard"),"."),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<difficulty>easy</difficulty> \x3c!-- Defaults to hard --\x3e\n")),Object(n.b)("h3",{id:"hunger"},"Hunger"),Object(n.b)("p",null,"Specify if a player can starve to death, usually used with the difficulty setting.",Object(n.b)("br",null),"\nThis can also be accomplished with the ",Object(n.b)("inlineCode",{parentName:"p"},"naturalRegeneration")," ",Object(n.b)("a",Object(a.a)({parentName:"p"},{href:"/modules/gamerules"}),"gamerule"),"."),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<hunger>\n    <depletion>off</depletion>\n</hunger>\n")),Object(n.b)("h3",{id:"damage-filtering"},"Damage Filtering"),Object(n.b)("p",null,"This module is used to filter when or if damage is applied to entities.\nIts contents can be a filter or combination of filters.\nIt doesn't have to be ",Object(n.b)("inlineCode",{parentName:"p"},"<allow>")," and ",Object(n.b)("inlineCode",{parentName:"p"},"<deny>")," at the top level but that's usually what you want.\nRegions can also be used since they are filters that filter for a location."),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Examples")),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<damage>\n    <deny>\n        <cause>explosion</cause>\n    </deny>\n</damage>\n")),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"\x3c!-- Deny damage events where the attacker is on the red team --\x3e\n<damage>\n    <deny>\n        <attacker>\n            <team>red</team>\n        </attacker>\n    </deny>\n</damage>\n")),Object(n.b)("h3",{id:"disable-damage"},"Disable Damage"),Object(n.b)("p",null,"Use this module to disable damage from specific causes."),Object(n.b)("p",null,"While almost every form of damage can be disabled safely it is recommended that you do ",Object(n.b)("strong",{parentName:"p"},"not")," disable ",Object(n.b)("inlineCode",{parentName:"p"},"VOID")," damage."),Object(n.b)("div",{className:"table-container"},Object(n.b)("table",null,Object(n.b)("thead",null,Object(n.b)("tr",null,Object(n.b)("th",null,"Disable Damage Element"),Object(n.b)("th",null,"Description"),Object(n.b)("th",null))),Object(n.b)("tbody",null,Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"<disabledamage> </disabledamage>")),Object(n.b)("td",null,"Node containing the disabled damage types."),Object(n.b)("td",null)),Object(n.b)("tr",null,Object(n.b)("th",null,"Sub-elements"),Object(n.b)("th",null),Object(n.b)("th",null,"Value/Children")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"<damage> </damage>")),Object(n.b)("td",null,"The damage type that is disabled."),Object(n.b)("td",null,Object(n.b)("a",{href:"#causes"},"Damage Cause")))))),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Example")),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<disabledamage>\n    \x3c!-- Disable fall damage --\x3e\n    <damage>fall</damage>\n</disabledamage>\n")),Object(n.b)("h4",{id:"block-explosion-attributes"},"Block Explosion Attributes"),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"BLOCK_EXPLOSION")," damage cause has several extended attributes to customize who/what gets damaged. Only attributes with ",Object(n.b)("inlineCode",{parentName:"p"},"false")," as the value need to be explicitly defined since all attributes default to ",Object(n.b)("inlineCode",{parentName:"p"},"true"),"."),Object(n.b)("div",{className:"table-responsive"},Object(n.b)("table",{className:"table table-striped table-condensed"},Object(n.b)("thead",null,Object(n.b)("tr",null,Object(n.b)("th",null,"Attribute"),Object(n.b)("th",null,"Description"),Object(n.b)("th",null,"Value"),Object(n.b)("th",null,"Default"))),Object(n.b)("tbody",null,Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"ally")),Object(n.b)("td",null,"Damage to players on the same team as the person that caused the explosion."),Object(n.b)("td",null,Object(n.b)("span",{className:"label label-primary"},"true/false")),Object(n.b)("td",null,"true")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"self")),Object(n.b)("td",null,"Damage to the person that caused the explosion."),Object(n.b)("td",null,Object(n.b)("span",{className:"label label-primary"},"true/false")),Object(n.b)("td",null,"true")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"enemy")),Object(n.b)("td",null,"Damage to players not on the same team as the person that caused the explosion."),Object(n.b)("td",null,Object(n.b)("span",{className:"label label-primary"},"true/false")),Object(n.b)("td",null,"true")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"other")),Object(n.b)("td",null,"Any other damage caused by the explosion."),Object(n.b)("td",null,Object(n.b)("span",{className:"label label-primary"},"true/false")),Object(n.b)("td",null,"true"))))),Object(n.b)("p",null,Object(n.b)("em",{parentName:"p"},"Example")),Object(n.b)("pre",null,Object(n.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<disabledamage>\n    \x3c!-- TNT damages enemies and self, but not teammates --\x3e\n    <damage ally="true" self="false" enemy="false" other="false">block explosion</damage>\n</disabledamage>\n')),Object(n.b)("h4",{id:"damage-causes"},"Damage Causes"),Object(n.b)("p",null,"The following damage causes can be used in the disable damage module.\nThese causes do not need to be capitalized or contain underscores, i.e., ",Object(n.b)("inlineCode",{parentName:"p"},"FIRE_TICK")," and ",Object(n.b)("inlineCode",{parentName:"p"},"fire tick")," will both work."),Object(n.b)("div",{className:"table-container"},Object(n.b)("table",null,Object(n.b)("thead",null,Object(n.b)("tr",null,Object(n.b)("th",null,"Name"),Object(n.b)("th",null,"Description"))),Object(n.b)("tbody",null,Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"CONTACT")),Object(n.b)("td",null,"Damage caused when an entity contacts a block such as a Cactus.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"ENTITY_ATTACK")),Object(n.b)("td",null,"Damage caused when an entity attacks another entity.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"PROJECTILE")),Object(n.b)("td",null,"Damage caused when attacked by a projectile.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"SUFFOCATION")),Object(n.b)("td",null,"Damage caused by being put in a block.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"FALL")),Object(n.b)("td",null,"Damage caused when an entity falls a distance greater than 3 blocks.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"FIRE")),Object(n.b)("td",null,"Damage caused by direct exposure to fire.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"FIRE_TICK")),Object(n.b)("td",null,"Damage caused due to burns caused by fire.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"MELTING")),Object(n.b)("td",null,"Damage caused due to a snowman melting.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"LAVA")),Object(n.b)("td",null,"Damage caused by direct exposure to lava.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"DROWNING")),Object(n.b)("td",null,"Damage caused by running out of air while in water.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"BLOCK_EXPLOSION")),Object(n.b)("td",null,"Damage caused by being in the area when a block explodes.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"ENTITY_EXPLOSION")),Object(n.b)("td",null,"Damage caused by being in the area when an entity, such as a Creeper, explodes.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"VOID")),Object(n.b)("td",null,"Damage caused by falling into the void.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"LIGHTNING")),Object(n.b)("td",null,"Damage caused by being struck by lightning.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"SUICIDE")),Object(n.b)("td",null,'Damage caused by committing suicide using the command "/kill".')),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"STARVATION")),Object(n.b)("td",null,"Damage caused by starving due to having an empty hunger bar.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"POISON")),Object(n.b)("td",null,"Damage caused due to an ongoing poison effect.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"MAGIC")),Object(n.b)("td",null,"Damage caused by being hit by a damage potion or spell.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"WITHER")),Object(n.b)("td",null,"Damage caused by Wither potion effect.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"FALLING_BLOCK")),Object(n.b)("td",null,"Damage caused by being hit by a falling block which deals damage.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"THORNS")),Object(n.b)("td",null,"Damage caused in retaliation to another attack by the Thorns enchantment.")),Object(n.b)("tr",null,Object(n.b)("td",null,Object(n.b)("label",null,"CUSTOM")),Object(n.b)("td",null,"Custom damage."))))),Object(n.b)("p",null,"Copied from: ",Object(n.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/event/entity/EntityDamageEvent.DamageCause.html"}),"bukkit docs - Damage Cause")))}d.isMDXComponent=!0},180:function(e,t,l){"use strict";l.d(t,"a",(function(){return o})),l.d(t,"b",(function(){return j}));var a=l(0),b=l.n(a);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function c(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?c(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):c(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function u(e,t){if(null==e)return{};var l,a,b=function(e,t){if(null==e)return{};var l,a,b={},n=Object.keys(e);for(a=0;a<n.length;a++)l=n[a],t.indexOf(l)>=0||(b[l]=e[l]);return b}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)l=n[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(b[l]=e[l])}return b}var i=b.a.createContext({}),d=function(e){var t=b.a.useContext(i),l=t;return e&&(l="function"==typeof e?e(t):r({},t,{},e)),l},o=function(e){var t=d(e.components);return b.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},O=Object(a.forwardRef)((function(e,t){var l=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),o=d(l),O=a,j=o["".concat(c,".").concat(O)]||o[O]||s[O]||n;return l?b.a.createElement(j,r({ref:t},i,{components:l})):b.a.createElement(j,r({ref:t},i))}));function j(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=l.length,c=new Array(n);c[0]=O;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:a,c[1]=r;for(var i=2;i<n;i++)c[i]=l[i];return b.a.createElement.apply(null,c)}return b.a.createElement.apply(null,l)}O.displayName="MDXCreateElement"}}]);